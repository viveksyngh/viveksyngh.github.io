<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paper-notes on Vivek Kumar Singh</title>
    <link>http://www.viveksyngh.com/paper-notes/</link>
    <description>Recent content in Paper-notes on Vivek Kumar Singh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 19 Feb 2023 00:00:00 -0600</lastBuildDate><atom:link href="http://www.viveksyngh.com/paper-notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Diving into Amazon Dynamo Paper</title>
      <link>http://www.viveksyngh.com/paper-notes/diving-into-amazon-dynamo-paper/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 -0600</pubDate>
      
      <guid>http://www.viveksyngh.com/paper-notes/diving-into-amazon-dynamo-paper/</guid>
      <description>In this blog post, we are going to look into Amazon Dynamo paper which describes a set of techniques that can be combined to form a highly-available, distributed key-value data store. This paper then became foundation for databases such as Cassandra, Riak etc.
Dynamo addresses the need for an incrementally scalable, highly-available key-value storage system. The technology is designed to give its users the ability to trade-off cost, consistency, durability and performance, while maintaining high-availability.</description>
    </item>
    
    <item>
      <title>MapReduce Overview</title>
      <link>http://www.viveksyngh.com/paper-notes/mapreduce-overview/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 -0600</pubDate>
      
      <guid>http://www.viveksyngh.com/paper-notes/mapreduce-overview/</guid>
      <description>In this blog, I will be discussing MapReduce programming model and how it works. This blog is based on the original MapReduce research paper MapReduce: Simplified Data Processing on Large Clusters from Google.
MapReduce is a programming model and an associated implementation for processing and generating large data sets. User specifies a map function that processes a key/value pair to generate a set for intermediate key/value pairs, and a reduce function that merges all intermediate values associated with the same intermediate key.</description>
    </item>
    
  </channel>
</rss>
