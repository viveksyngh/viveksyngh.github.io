<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>yaml on Vivek Kumar Singh</title>
    <link>http://www.viveksyngh.com/tags/yaml/</link>
    <description>Recent content in yaml on Vivek Kumar Singh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 07 Nov 2022 00:00:00 -0600</lastBuildDate><atom:link href="http://www.viveksyngh.com/tags/yaml/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Converting Kubernetes Go Types to YAML and vice versa</title>
      <link>http://www.viveksyngh.com/posts/converting-kubernetes-go-types-to-yaml-and-vice-versa/</link>
      <pubDate>Mon, 07 Nov 2022 00:00:00 -0600</pubDate>
      
      <guid>http://www.viveksyngh.com/posts/converting-kubernetes-go-types-to-yaml-and-vice-versa/</guid>
      <description>In this blog post, we will see how we can encode/decode Kubernetes Go API types to/from Kubernetes YAML.
When we work with Kubernetes Go API types (custom types or core types), we often need to convert the Go API types into YAML manifest or vice versa. For example, A CLI application
Which output Kubernetes objects in YAML
Which takes Kubernetes objects YAML as input
For demonstration purposes, we will be creating a simple application that creates a Kubernetes ConfigMap object and encodes/decodes it.</description>
    </item>
    
  </channel>
</rss>
